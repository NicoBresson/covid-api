{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect } from 'react';\nexport default function useStats(url) {\n  var _useState = useState(),\n      stats = _useState[0],\n      setStats = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  useEffect(function () {\n    console.log('Mounting or Updating');\n\n    function fetchData() {\n      var data;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              console.log('fetching data');\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(fetch(url).then(function (res) {\n                return res.json();\n              })[\"catch\"](function (error) {\n                setError(error);\n              }));\n\n            case 4:\n              data = _context.sent;\n              setLoading(true);\n              setStats(data);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  }, []);\n  return {\n    stats: stats,\n    loading: loading,\n    error: error\n  };\n}","map":{"version":3,"sources":["/Users/nico/Code/covid19/utils/useStats.js"],"names":["useState","useEffect","useStats","url","stats","setStats","loading","setLoading","error","setError","console","log","fetchData","fetch","then","res","json","data"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AAAA,kBACVH,QAAQ,EADE;AAAA,MAC7BI,KAD6B;AAAA,MACtBC,QADsB;;AAAA,mBAENL,QAAQ,CAAC,KAAD,CAFF;AAAA,MAE7BM,OAF6B;AAAA,MAEpBC,UAFoB;;AAAA,mBAGXP,QAAQ,EAHG;AAAA,MAG7BQ,KAH6B;AAAA,MAGvBC,QAHuB;;AAIpCR,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;;AACA,aAAeC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACEL,cAAAA,UAAU,CAAC,IAAD,CAAV;AACAG,cAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAFF;AAAA,+CAGqBE,KAAK,CAACV,GAAD,CAAL,CAChBW,IADgB,CACX,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,eADQ,WAEV,UAAAR,KAAK,EAAE;AAACC,gBAAAA,QAAQ,CAACD,KAAD,CAAR;AAAgB,eAFd,CAHrB;;AAAA;AAGQS,cAAAA,IAHR;AAMEV,cAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,cAAAA,QAAQ,CAACY,IAAD,CAAR;;AAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASAL,IAAAA,SAAS;AACV,GAZQ,EAYN,EAZM,CAAT;AAaA,SAAO;AAACR,IAAAA,KAAK,EAALA,KAAD;AAAOE,IAAAA,OAAO,EAAPA,OAAP;AAAeE,IAAAA,KAAK,EAALA;AAAf,GAAP;AACD","sourcesContent":["import { useState, useEffect } from 'react';\n\nexport default function useStats(url) {\n  const [stats, setStats] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error,setError] = useState();\n  useEffect(() => {\n    console.log('Mounting or Updating')\n    async function fetchData() {\n      setLoading(true)\n      console.log('fetching data')\n      const data = await fetch(url)\n        .then(res => res.json())\n        .catch(error=>{setError(error)})\n      setLoading(true)\n      setStats(data);\n    }\n    fetchData();\n  }, [])\n  return {stats,loading,error}\n}\n"]},"metadata":{},"sourceType":"module"}