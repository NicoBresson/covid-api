{"ast":null,"code":"import { useState, useEffect } from 'react';\nexport default function useStats(url) {\n  const {\n    0: stats,\n    1: setStats\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const [error, setError] = userState();\n  useEffect(() => {\n    console.log('Mounting or Updating');\n\n    async function fetchData() {\n      setLoading(true);\n      console.log('fetching data');\n      const data = await fetch(url).then(res => res.json()).catch(error => {\n        setError(error);\n      });\n      setLoading(true);\n      setStats(data);\n    }\n\n    fetchData();\n  }, []);\n  return {\n    stats,\n    loading,\n    error\n  };\n}","map":{"version":3,"sources":["/Users/nico/Code/covid19/utils/useStats.js"],"names":["useState","useEffect","useStats","url","stats","setStats","loading","setLoading","error","setError","userState","console","log","fetchData","data","fetch","then","res","json","catch"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACpC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,EAAlC;AACA,QAAM;AAAA,OAACM,OAAD;AAAA,OAAUC;AAAV,MAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,KAAD,EAAOC,QAAP,IAAmBC,SAAS,EAAlC;AACAT,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;;AACA,mBAAeC,SAAf,GAA2B;AACzBN,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,YAAME,IAAI,GAAG,MAAMC,KAAK,CAACZ,GAAD,CAAL,CAChBa,IADgB,CACXC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADI,EAEhBC,KAFgB,CAEVX,KAAK,IAAE;AAACC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AAAgB,OAFd,CAAnB;AAGAD,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,MAAAA,QAAQ,CAACS,IAAD,CAAR;AACD;;AACDD,IAAAA,SAAS;AACV,GAZQ,EAYN,EAZM,CAAT;AAaA,SAAO;AAACT,IAAAA,KAAD;AAAOE,IAAAA,OAAP;AAAeE,IAAAA;AAAf,GAAP;AACD","sourcesContent":["import { useState, useEffect } from 'react';\n\nexport default function useStats(url) {\n  const [stats, setStats] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error,setError] = userState();\n  useEffect(() => {\n    console.log('Mounting or Updating')\n    async function fetchData() {\n      setLoading(true)\n      console.log('fetching data')\n      const data = await fetch(url)\n        .then(res => res.json())\n        .catch(error=>{setError(error)})\n      setLoading(true)\n      setStats(data);\n    }\n    fetchData();\n  }, [])\n  return {stats,loading,error}\n}\n"]},"metadata":{},"sourceType":"module"}