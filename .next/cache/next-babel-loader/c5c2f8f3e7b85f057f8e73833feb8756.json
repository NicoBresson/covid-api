{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from 'react';\nexport default function useStats(url) {\n  var _useState = useState(),\n      stats = _useState[0],\n      setStats = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _userState = userState(),\n      _userState2 = _slicedToArray(_userState, 2),\n      error = _userState2[0],\n      setError = _userState2[1];\n\n  useEffect(function () {\n    console.log('Mounting or Updating');\n\n    function fetchData() {\n      var data;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              console.log('fetching data');\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(fetch(url).then(function (res) {\n                return res.json();\n              }));\n\n            case 4:\n              data = _context.sent;\n              setStats(data);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  }, []);\n  return {\n    stats: stats,\n    loading: loading\n  };\n}","map":{"version":3,"sources":["/Users/nico/Code/covid19/utils/useStats.js"],"names":["useState","useEffect","useStats","url","stats","setStats","loading","setLoading","userState","error","setError","console","log","fetchData","fetch","then","res","json","data"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AAAA,kBACVH,QAAQ,EADE;AAAA,MAC7BI,KAD6B;AAAA,MACtBC,QADsB;;AAAA,mBAENL,QAAQ,CAAC,KAAD,CAFF;AAAA,MAE7BM,OAF6B;AAAA,MAEpBC,UAFoB;;AAAA,mBAGXC,SAAS,EAHE;AAAA;AAAA,MAG7BC,KAH6B;AAAA,MAGvBC,QAHuB;;AAIpCT,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;;AACA,aAAeC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACEN,cAAAA,UAAU,CAAC,IAAD,CAAV;AACAI,cAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAFF;AAAA,+CAGqBE,KAAK,CAACX,GAAD,CAAL,CAChBY,IADgB,CACX,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,eADQ,CAHrB;;AAAA;AAGQC,cAAAA,IAHR;AAKEb,cAAAA,QAAQ,CAACa,IAAD,CAAR;;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOAL,IAAAA,SAAS;AACV,GAVQ,EAUN,EAVM,CAAT;AAWA,SAAO;AAACT,IAAAA,KAAK,EAALA,KAAD;AAAOE,IAAAA,OAAO,EAAPA;AAAP,GAAP;AACD","sourcesContent":["import { useState, useEffect } from 'react';\n\nexport default function useStats(url) {\n  const [stats, setStats] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error,setError] = userState();\n  useEffect(() => {\n    console.log('Mounting or Updating')\n    async function fetchData() {\n      setLoading(true)\n      console.log('fetching data')\n      const data = await fetch(url)\n        .then(res => res.json())\n      setStats(data);\n    }\n    fetchData();\n  }, [])\n  return {stats,loading}\n}\n"]},"metadata":{},"sourceType":"module"}