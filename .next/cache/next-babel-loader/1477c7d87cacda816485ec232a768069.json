{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/nico/Code/covid19/components/CountrySelector.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport useStats from '../utils/useStats';\nimport Stats from './Stats';\n\nvar CountrySelector = function CountrySelector() {\n  var _useStats = useStats('https://covid19.mathdro.id/api/countries'),\n      countries = _useStats.stats,\n      loading = _useStats.loading,\n      error = _useStats.error;\n\n  var _useState = useState('USA'),\n      selectedCountry = _useState[0],\n      setSelectedCountry = _useState[1];\n\n  if (loading) return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 21\n    }\n  }, \"Error...\");\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, \"Currently showing \", selectedCountry), __jsx(\"select\", {\n    onChange: function onChange(e) {\n      setSelectedCountry(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, Object.entries(countries.countries).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        country = _ref2[0],\n        code = _ref2[1];\n\n    return __jsx(\"option\", {\n      selected: selectedCountry === countries.iso3[code],\n      key: code,\n      value: countries.iso3[code],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }, country);\n  })), __jsx(Stats, {\n    url: \"https://covid19.mathdro.id/api/countries/\".concat(selectedCountry),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default CountrySelector;","map":{"version":3,"sources":["/Users/nico/Code/covid19/components/CountrySelector.js"],"names":["useState","useStats","Stats","CountrySelector","countries","stats","loading","error","selectedCountry","setSelectedCountry","e","target","value","Object","entries","map","country","code","iso3"],"mappings":";;;;;;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAAA,kBACcF,QAAQ,CAAC,0CAAD,CADtB;AAAA,MACbG,SADa,aACpBC,KADoB;AAAA,MACHC,OADG,aACHA,OADG;AAAA,MACKC,KADL,aACKA,KADL;;AAAA,kBAGkBP,QAAQ,CAAC,KAAD,CAH1B;AAAA,MAGrBQ,eAHqB;AAAA,MAGJC,kBAHI;;AAK5B,MAAIH,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEX,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuBC,eAAvB,CADF,EAEE;AACE,IAAA,QAAQ,EAAE,kBAAAE,CAAC,EAAI;AACbD,MAAAA,kBAAkB,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGC,MAAM,CAACC,OAAP,CAAeV,SAAS,CAACA,SAAzB,EAAoCW,GAApC,CAAwC;AAAA;AAAA,QAAEC,OAAF;AAAA,QAAWC,IAAX;;AAAA,WACvC;AACE,MAAA,QAAQ,EAAET,eAAe,KAAKJ,SAAS,CAACc,IAAV,CAAeD,IAAf,CADhC;AAEE,MAAA,GAAG,EAAEA,IAFP;AAGE,MAAA,KAAK,EAAEb,SAAS,CAACc,IAAV,CAAeD,IAAf,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGD,OALH,CADuC;AAAA,GAAxC,CALH,CAFF,EAiBE,MAAC,KAAD;AAAO,IAAA,GAAG,qDAA8CR,eAA9C,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CADF;AAqBD,CA7BD;;AA+BA,eAAeL,eAAf","sourcesContent":["import {useState} from 'react';\nimport useStats from '../utils/useStats';\nimport Stats from './Stats';\n\nconst CountrySelector = () => {\n  const { stats: countries,loading,error} = useStats('https://covid19.mathdro.id/api/countries');\n\n  const [selectedCountry, setSelectedCountry] = useState('USA');\n\n  if (loading) return <p>Loading...</p>\n  if (error) return <p>Error...</p>\n\n  return (\n    <div>\n      <h2>Currently showing {selectedCountry}</h2>\n      <select\n        onChange={e => {\n          setSelectedCountry(e.target.value);\n        }}\n      >\n        {Object.entries(countries.countries).map(([country, code]) => (\n          <option\n            selected={selectedCountry === countries.iso3[code]}\n            key={code}\n            value={countries.iso3[code]}\n          >\n            {country}\n          </option>\n        ))}\n      </select>\n      <Stats url={`https://covid19.mathdro.id/api/countries/${selectedCountry}`} />\n    </div>\n  )\n}\n\nexport default CountrySelector;\n"]},"metadata":{},"sourceType":"module"}